<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: client.proto

namespace Ms\Register\Client\AdminManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 列表请求
 *
 * Generated from protobuf message <code>ms.Register.Client.AdminManager.listService</code>
 */
class listService extends \Google\Protobuf\Internal\Message
{
    /**
     * 页码
     *
     * Generated from protobuf field <code>int32 page = 1;</code>
     */
    protected $page = 0;
    /**
     * 没有行数
     *
     * Generated from protobuf field <code>int32 limit = 2;</code>
     */
    protected $limit = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $page
     *           页码
     *     @type int $limit
     *           没有行数
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Client::initOnce();
        parent::__construct($data);
    }

    /**
     * 页码
     *
     * Generated from protobuf field <code>int32 page = 1;</code>
     * @return int
     */
    public function getPage()
    {
        return $this->page;
    }

    /**
     * 页码
     *
     * Generated from protobuf field <code>int32 page = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPage($var)
    {
        GPBUtil::checkInt32($var);
        $this->page = $var;

        return $this;
    }

    /**
     * 没有行数
     *
     * Generated from protobuf field <code>int32 limit = 2;</code>
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * 没有行数
     *
     * Generated from protobuf field <code>int32 limit = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkInt32($var);
        $this->limit = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(listService::class, \Ms\Register\Client\AdminManager_listService::class);

