<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

namespace Ms\Register\Common;

use UnexpectedValueException;

/**
 * 类型（服务，节点）
 *
 * Protobuf type <code>ms.Register.Common.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>TCP = 0;</code>
     */
    const TCP = 0;
    /**
     * Generated from protobuf enum <code>Http = 1;</code>
     */
    const Http = 1;
    /**
     * Generated from protobuf enum <code>Https = 3;</code>
     */
    const Https = 3;
    /**
     * Generated from protobuf enum <code>Http2 = 4;</code>
     */
    const Http2 = 4;
    /**
     * Generated from protobuf enum <code>Ws = 5;</code>
     */
    const Ws = 5;
    /**
     * Generated from protobuf enum <code>Wss = 6;</code>
     */
    const Wss = 6;

    private static $valueToName = [
        self::TCP => 'TCP',
        self::Http => 'Http',
        self::Https => 'Https',
        self::Http2 => 'Http2',
        self::Ws => 'Ws',
        self::Wss => 'Wss',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

